---
# If we're executing these plays, then:
# 1. cache_enabled is true
# 2. Either one or both bootstraposimage/clusterosimage variables are unset

- name: Create {{ provision_cache_store }} on provisioning host
  file:
    path: "{{ provision_cache_store }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'

# rhcos_json fact already set in 23_rhcos_image_paths.yaml
- name: Set facts for RHCOS_QEMU_SHA256 and RHCOS_SHA256
  set_fact:
    rhcos_qemu_sha256: '{{ rhcos_json.json | json_query(''images.qemu."uncompressed-sha256"'') }}'
    rhcos_sha256: "{{ rhcos_json.json | json_query('images.openstack.sha256') }}"

- name: Check if {{ rhcos_qemu_uri }} is already in cache
  stat: 
    path: "{{ provision_cache_store }}{{ rhcos_qemu_uri }}"
    checksum_algorithm: sha256
    get_checksum: yes
  register: rhcos_qemu_stat

- name: Download {{ rhcos_qemu_uri }} for cache
  get_url:
    url:  "{{ rhcos_path }}{{ rhcos_qemu_uri }}"
    dest: "{{ provision_cache_store }}{{ rhcos_qemu_uri }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
    timeout: 3600
  when: (rhcos_qemu_stat.stat.exists == false or rhcos_qemu_stat.stat.checksum != rhcos_qemu_sha256)

- name: Check if {{ rhcos_uri }} is already in cache
  stat: 
    path: "{{ provision_cache_store }}{{ rhcos_uri }}"
    checksum_algorithm: sha256
    get_checksum: yes
  register: rhcos_stat

- name: Download {{ rhcos_uri }} for cache
  get_url:
    url:  "{{ rhcos_path }}{{ rhcos_uri }}"
    dest: "{{ provision_cache_store }}{{ rhcos_uri }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
    timeout: 3600
  when: (rhcos_stat.stat.exists == false or rhcos_stat.stat.checksum != rhcos_sha256)

# Since we're using a local RHCOS image cache, we want override the standard rhcos_path
# acquired from the version's rhcos_json and point to our provisioning bridge IP instead
- name: Override existing rhcos_path variable
  set_fact:
    rhcos_path: "http://172.22.0.1/"

- name: Set bootstrap image URL override if not provided by the user
  set_fact:
    bootstrapOSImage: "{{ rhcos_path }}{{ rhcos_qemu_uri }}?sha256={{ rhcos_qemu_sha256 }}"
  when: bootstrapOSImage is not defined or bootstrapOSImage|length < 1

- name: Set cluster image URL override if not provided by the user
  set_fact:
    clusterOSImage: "{{ rhcos_path }}{{ rhcos_uri }}?sha256={{ rhcos_sha256 }}"
  when: clusterOSImage is not defined or clusterOSImage|length < 1

# install-config.yaml is normally generated via the node-prep role, but we need
# to regenerate it here to incorporate cache values.  We have to do the cache value
# generation in the installer role, because this role is what downloads the installer
# binary.  The installer binary is required to determine the commit ID used for the 
# selected OCP version, and the commit ID is needed to ultimately determine the image 
# URIs.
- name: Re-do install-config.yaml generation with cache values
  include_role:
    name: node-prep
    tasks_from: 100_create-install-config

- name: Start RHCOS image cache container
  podman_container:
    name: rhcos_image_cache
    image: httpd
    state: started
    exposed_ports:
      - 80
    volumes:
      - "{{ provision_cache_store }}:/usr/local/apache2/htdocs"
    network: host
  become: yes
