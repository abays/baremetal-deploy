---
- name: Check if {{ rhcos_qemu_uri }} is already in cache
  stat: 
    path: "{{ cache_storage_location }}{{ rhcos_qemu_uri }}"
    checksum_algorithm: sha256
    get_checksum: yes
  register: rhcos_qemu_stat
  #when: (release_version[0]|int > 4) or (release_version[2]|int > 3)

- name: Download {{ rhcos_qemu_uri }} for cache
  get_url:
    url:  "{{ rhcos_path }}/{{ rhcos_qemu_uri }}"
    dest: "{{ cache_storage_location }}{{ rhcos_qemu_uri }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'
    timeout: 3600
  #when: ((release_version[0]|int > 4) or (release_version[2]|int > 3)) and (rhcos_qemu_stat.stat.exists == false or rhcos_qemu_stat.stat.checksum != rhcos_qemu_sha256)
  when: (rhcos_qemu_stat.stat.exists == false or rhcos_qemu_stat.stat.checksum != rhcos_qemu_sha256)
  become: yes

- name: Check if {{ rhcos_uri }} is already in cache
  stat: 
    path: "{{ cache_storage_location }}{{ rhcos_uri }}"
    checksum_algorithm: sha256
    get_checksum: yes
  register: rhcos_stat

- name: Download {{ rhcos_uri }} for cache
  get_url:
    url:  "{{ rhcos_path }}/{{ rhcos_uri }}"
    dest: "{{ cache_storage_location }}{{ rhcos_uri }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'
    timeout: 3600
  when: (rhcos_stat.stat.exists == false or rhcos_stat.stat.checksum != rhcos_sha256)
  become: yes

# The following cache customizations are required for 4.3, because the installer
# does not seem to be honoring the rhcos_image_url and cache_url values in the metal3-config
# yaml config map (perhaps support for them was removed?).  Instead, we just put the 
# image and its checksum where the bootstrap expects to find them by default.
- name: Cache customizations needed for 4.3
  block:
    - name: Create images dir in httpd root
      file:
        path: "{{ cache_storage_location }}images"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0755'
      become: yes

    - name: Set fact for cache image without gz extension
      set_fact:
        rhcos_uri_minus_gz: "{{ rhcos_uri[:-3] }}"

    - name: Set fact for cache image compressed qcow2 name
      set_fact:
        rhcos_compressed_qcow2: "{{ rhcos_uri_minus_gz | replace('openstack','compressed') }}"

    - name: Create image sub-dir in httpd root
      file:
        path: "{{ cache_storage_location }}images/{{ rhcos_uri_minus_gz }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0755'
      become: yes

    # unarchive module does NOT support non-tar gz files, so we have to use shell here
    - name: Extract {{ rhcos_uri }} into image cache sub-dir
      shell: "gunzip -ck {{ cache_storage_location }}{{ rhcos_uri }} > {{ cache_storage_location }}images/{{ rhcos_uri_minus_gz }}/{{ rhcos_uri_minus_gz }}"
      become: true

    - name: Convert image into compressed qcow2
      shell: "qemu-img convert -O qcow2 -c {{ cache_storage_location }}images/{{ rhcos_uri_minus_gz }}/{{ rhcos_uri_minus_gz }} {{ cache_storage_location }}images/{{ rhcos_uri_minus_gz }}/{{ rhcos_compressed_qcow2 }}"
      become: yes
    
    - name: Get md5sum of new compressed qcow2 image
      shell: "md5sum {{ cache_storage_location }}images/{{ rhcos_uri_minus_gz }}/{{ rhcos_compressed_qcow2 }} | awk '{print $1}'"
      register: rhcos_image_md5sum
      become: yes

    - name: Create md5sum file in image cache sub-dir
      template:
        src: rhcos-image-md5sum.j2
        dest: "{{ cache_storage_location }}images/{{ rhcos_uri_minus_gz }}/{{ rhcos_compressed_qcow2 }}.md5sum"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0644'
      become: yes
  when: (release_version[0]|int == 4) and (release_version[2]|int <= 3) and ((rhcos_stat.stat.exists == false or rhcos_stat.stat.checksum != rhcos_sha256))